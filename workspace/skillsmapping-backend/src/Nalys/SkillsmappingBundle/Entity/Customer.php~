<?php

namespace Nalys\SkillsmappingBundle\Entity;

use Doctrine\ORM\Mapping as ORM;

/**
 * Client
 *
 * @ORM\Table(name="nalys_customer")
 * @ORM\Entity(repositoryClass="Nalys\SkillsmappingBundle\Repository\CustomerRepository")
 */
class Customer
{
    /**
     * @var int
     *
     * @ORM\Column(name="id", type="integer")
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    private $id;

    /**
     * @var string
     *
     * @ORM\Column(name="name", type="string", length=255, unique=true)
     */
    private $name;

    /**
     * @ORM\OneToMany(targetEntity="Nalys\SkillsmappingBundle\Entity\Location", mappedBy="client")
     */
    private $locations;

    /**
     * @ORM\OneToMany(targetEntity="Nalys\SkillsmappingBundle\Entity\Mission", mappedBy="client")
     */
    private $missions;

    /**
     * Get id
     *
     * @return int
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set name
     *
     * @param string $name
     *
     * @return Client
     */
    public function setName($name)
    {
        $this->name = $name;

        return $this;
    }

    /**
     * Get name
     *
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }
    /**
     * Constructor
     */
    public function __construct()
    {
        $this->locations = new \Doctrine\Common\Collections\ArrayCollection();
    }

    /**
     * Add location
     *
     * @param \Nalys\SkillsmappingBundle\Entity\Location $location
     *
     * @return Client
     */
    public function addLocation(\Nalys\SkillsmappingBundle\Entity\Location $location)
    {
        $this->locations[] = $location;
        $location->setCustomer($this);
        return $this;
    }

    /**
     * Remove location
     *
     * @param \Nalys\SkillsmappingBundle\Entity\Location $location
     */
    public function removeLocation(\Nalys\SkillsmappingBundle\Entity\Location $location)
    {
        $this->locations->removeElement($location);
    }

    /**
     * Get locations
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getLocations()
    {
        return $this->locations;
    }

    /**
     * Add mission
     *
     * @param \Nalys\SkillsmappingBundle\Entity\Mission $mission
     *
     * @return Client
     */
    public function addMission(\Nalys\SkillsmappingBundle\Entity\Mission $mission)
    {
        $this->missions[] = $mission;

        return $this;
    }

    /**
     * Remove mission
     *
     * @param \Nalys\SkillsmappingBundle\Entity\Mission $mission
     */
    public function removeMission(\Nalys\SkillsmappingBundle\Entity\Mission $mission)
    {
        $this->missions->removeElement($mission);
    }

    /**
     * Get missions
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getMissions()
    {
        return $this->missions;
    }
}
